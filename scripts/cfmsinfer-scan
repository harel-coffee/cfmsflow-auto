#! /bin/bash
CONFIG=$1
source $CONFIG

echo -e "\e[36m Scanning classifiers and getting optimal parameters\e[39m"

#rm -f logs/error_scan
#rm -f logs/log_scan

if [ -n $CLASSIFIERS_TO_SCAN ];then
  CLASSIFIERS_FORMATTED=$(cat $CLASSIFIERS_TO_SCAN | tr '\n' ' ')

  echo "python /project/cmcwhite/github/run_TPOT/train_TPOT.py --training_data feature_matrix/${EXP_PREFIX}_feature_matrix.labeled1 --outfile training/tpot_${EXP_PREFIX}.py --classifier_subset $CLASSIFIERS_FORMATTED --id_cols 0 --n_jobs 20 --generations $GENERATIONS --population_size $POPULATION --labels -1 1 --temp_dir training/tpot_${EXP_PREFIX}.tmp"   > records/record_scan_COMMANDS.sh

else
  echo "python /project/cmcwhite/github/run_TPOT/train_TPOT.py --training_data feature_matrix/${EXP_PREFIX}_feature_matrix.labeled1 --outfile training/tpot_${EXP_PREFIX}.py  --id_cols 0 --n_jobs 20 --generations $GENERATIONS --population_size $POPULATION --labels -1 1 --temp_dir training/tpot_${EXP_PREFIX}.tmp" > records/record_scan_COMMANDS.sh

fi

#bash records/record_scan_COMMANDS.sh > logs/log_scan 2> logs/error_scan

# Temp directories are very large
rm -r training/*tmp

# Remove empty error files (meaning no error)
# Parallel returns an empty stderr by default
find "logs" -maxdepth 1 -name "error_scan" -empty -delete

#Look for any errors and report. Error log is cleared out at each run so any new errors are from current run

# Cat to wc -l, not wc -l logs/error_scan
# Otherwise variable will have filename, not just number of lines
error_len=$(cat logs/error_scan | wc -l)
echo $error_len
if [ "$error_len" -gt 0 ]
  then
    echo $error_len 

    echo "Errors found while scanning classifiers
    ls logs/error_scan
    exit 1
fi

if [ -f "$(find "training" -maxdepth 1 -name "tpot_${EXP_PREFIX}.py" | head -1)" ] 
  then   
    echo -e "\e[35mClassifiers scanned and tpot paramters found\e[39m)"
  else
    echo -e "\e[91mNo output files from classifier scan found (tpot_{EXP_PREFIX}*py)\e[39m)"
    echo -e "\e[91mExiting\e[39m"
    exit 1
fi
