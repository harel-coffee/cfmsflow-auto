#!/bin/bash
CONFIG=$1
source $CONFIG

echo -e "\e[32mFormat gold standard\e[39m"

if [ "$MAKE_NEGATIVES_FROM_OBSERVED" = "T" ];then
  if [ "$MAKE_NEGATIVES_FROM_INTERCOMPLEX" = "T" ]; then
     echo -e "\e91mMAKE_NEGATIVES_FROM_OBSERVED and MAKE_NEGATIVES_FROM_INTERCOMPLEX cannot both be T in config\e39m" 
  fi
fi

# Input format is one complex per line, each protein separated by a space
# A B C
# D E

GS_BASENAME=gold_standard_merged${MERGE_THRESHOLD/./}_size${COMPLEX_SIZE_THRESHOLD}_rmLrg_rmSub
rm -f records/record_gold_standard.sh

# Remove very large complexes
echo "python $PCM_DIR/protein_complex_maps/preprocessing_util/complexes/complex_merge.py --cluster_filename $GOLD_COMPLEXES --output_filename gold_standards/${GS_BASENAME}.txt --merge_threshold $MERGE_THRESHOLD --complex_size_threshold $COMPLEX_SIZE_THRESHOLD --remove_largest --remove_large_subcomplexes"> records/record_gold_standard.sh

# Split complexes to training and test complexes
echo "python $PCM_DIR/protein_complex_maps/preprocessing_util/complexes/split_complexes.py --input_complexes gold_standards/${GS_BASENAME}.txt" >> records/record_gold_standard.sh

# Alphabetize training and test interactions. 


echo "for ppi in gold_standards/*ppis.txt
 do
   sed -i 's/\t/ /' \$ppi 
   python $PCM_DIR/protein_complex_maps/features/alphabetize_pairs.py --feature_pairs \$ppi --outfile \${ppi%.txt}.ordered --sep ' ' 
 done" >> records/record_gold_standard.sh


echo "cp gold_standards/${GS_BASENAME}.train_ppis.ordered gold_standards/pos_train.txt" >> records/record_gold_standard.sh
echo "cp gold_standards/${GS_BASENAME}.test_ppis.ordered gold_standards/pos_test.txt" >> records/record_gold_standard.sh



if [ "$MAKE_NEGATIVES_FROM_INTERCOMPLEX" = "T" ]
then
   cp gold_standards/${GS_BASENAME}.neg_train_ppis.txt neg_train_pool.txt
   cp gold_standards/${GS_BASENAME}.neg_test_ppis.txt neg_test_pool.txt
fi


if [ "$MAKE_NEGATIVES_FROM_OBSERVED" = "T" ]
then
  # Get all ID pairs from the feature matrix (remove header with tail)
  echo "awk -F',' '{print \$1}' feature_matrix/${EXP_PREFIX}_feature_matrix.csv |  tail -n +2 > gold_standards/identifiers_infeatmat.txt" >> records/record_gold_standard.sh
  
  # Remove any interactions that are in the positive set
  echo "grep -vFf gold_standards/pos_train.txt gold_standards/identifiers_infeatmat.txt | grep -vFf gold_standards/pos_test.txt> gold_standards/neg_pool.txt" >> records/record_gold_standard.sh
 
  echo "sort -R gold_standards/neg_pool.txt > gold_standards/neg_pool.randsort" >> records/record_gold_standard.sh 

  echo "split --number=l/2 gold_standards/neg_pool.randsort && mv xaa gold_standards/neg_train_pool.txt && mv xab gold_standards/neg_test_pool.txt" >> records/record_gold_standard.sh
fi

if [ -n $LIMIT_NEGATIVES ]
then
 
  echo "sort -R gold_standards/neg_train_pool.txt | head -$LIMIT_NEGATIVES > gold_standards/neg_train.txt" >> records/record_gold_standard.sh 
  echo "sort -R gold_standards/neg_test_pool.txt | head -$LIMIT_NEGATIVES> gold_standards/neg_test.txt" >> records/record_gold_standard.sh
else
  echo "cp gold_standards/neg_train_pool.txt gold_standards/neg_train.txt" >> records/record_gold_standard.sh
  echo "cp gold_standards/neg_train_pool.txt gold_standards/neg_train.txt" >> records/record_gold_standard.sh

fi





rm -f logs/log_gold_standard
rm -f logs/error_gold_standard

bash records/record_gold_standard.sh > logs/log_gold_standard 2> logs/error_gold_standard 
 
# Remove empty error log
find "logs" -maxdepth 1 -name "error_gold_standard" -empty -delete

if [ -f logs/error_gold_standard ]; then
  ls logs/error_gold_standard
  echo -e "\e[91mError while building feature matrix\e[39m"
  echo -e "\e[91mSee output log at logs/log_gold_standard\e[39m"
  echo -e "\e[91mSee error log at logs/error_gold_standard\e[39m"

  exit 1
else
  echo -e "\e[35mGold standard files made without errors (gold_standards/neg_train.txt, gold_standards/neg_test.txt, gold_standard/pos_train.txt, gold_standards/pos_test.txt)\e[39m"

fi




# Make annotation file of which interactions are training and which are test

#:Rscript scripts/make_test_train_annotation.R -ptst gold_standards/Positives_merged06_size30_rmLrg_rmSub.test_ppis.ordered -ptrn gold_standards/Positives_merged06_size30_rmLrg_rmSub.train_ppis.ordered -ntst gold_standards/labels.neg_test.20k -ntrn gold_standards/labels.neg_train.20k -o gold_standards/Gold_standard_merged06_size30_rmLrg_rmSub.TestTrain.annot



