#! /bin/bash
CONFIG=$1
source $CONFIG

echo -e "\e[36m Scanning classifiers and getting optimal parameters\e[39m"

#rm -f errors/error_scan
#rm -f logs/log_scan

if [ -n $CLASSIFIERS_TO_SCAN ];then
  CLASSIFIERS_FORMATTED=$(cat $CLASSIFIERS_TO_SCAN | tr '\n' ' ')

  echo "python /project/cmcwhite/github/run_TPOT/train_TPOT.py --training_data feature_matrix/${EXP_PREFIX}.featmat.labeled1 --outfile training/tpot_${EXP_PREFIX}.py --classifier_subset $CLASSIFIERS_FORMATTED --id_cols 0 --n_jobs 20 --generations $GENERATIONS --population_size $POPULATION --labels -1 1 --temp_dir training/tpot_${EXP_PREFIX}.tmp"   > records/record_scan.sh

else
  echo "python /project/cmcwhite/github/run_TPOT/train_TPOT.py --training_data feature_matrix/${EXP_PREFIX}.featmat.labeled1 --outfile training/tpot_${EXP_PREFIX}.py  --id_cols 0 --n_jobs 20 --generations $GENERATIONS --population_size $POPULATION --labels -1 1 --temp_dir training/tpot_${EXP_PREFIX}.tmp" > records/record_scan.sh

fi

if [ $GEN_COMMANDS_ONLY != "T" ];then

  bash records/record_scan.sh > logs/log_scan 2> errors/error_scan
  
  # Check for exit code of command
  status=$?

  # Temp directories are very large
  rm -r training/*tmp

  if [ ! $status -eq 0 ]; then

    echo "Errors found while scanning classifiers"
    echo -e "\e[91mError while scanning classifiers\e[39m"
    echo -e "\e[91mSee errors at errors/error_scan\e[39m"
    exit 1
  else
    echo -e "\e[35mClassifiers scanned and tpot parameters found\e[39m)"
  fi
fi
