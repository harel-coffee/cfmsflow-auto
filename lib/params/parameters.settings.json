{
    "parameters": [
        {
            "name": "entrypoint",
            "label": "Pipeline step to begin at",
            "usage": "Which point in the pipeline to start.",
            "type": "integer",
            "render": "radio-button",
            "choices": [1, 2, 3, 4, 5],
            "default_value": 1,
            "group": "control"
        },
        {
            "name": "exitpoint",
            "label": "Pipeline step to stop",
            "usage": "Which point in the pipeline to stop.",
            "type": "integer",
            "render": "radio-button",
            "choices": [1, 2, 3, 4, 5],
            "default_value": 5,
            "group": "control"
        },

        {
            "name": "help",
            "usage": "Flag --help to display help",
            "type": "boolean",
            "render": "check-box",
            "default_value": false,
            "group": "control"
        },

        {
            "name": "make_parameter_json",
            "usage": "Flag to output a template json with necessary parameters for selected steps. Fill in and use with -params-file",
            "type": "string",
            "render": "check-box",
            "default_value": false,
            "group": "control"
        },



        {
            "name": "input_elution_pattern",
            "label": "Bash pattern matching elution files (.csv)",
            "usage": "Bash pattern matching elution files (.csv)",
            "type": "string",
            "render": "file",
            "default_value": "",
            "group": "input"
        },

        {
            "name": "input_elution_file",
            "usage": "File containing one path per line to an elution file (.csv)",
            "type": "string",
            "render": "file",
            "default_value": "",
            "group": "input"
        },



        {
            "name": "features_pattern",
            "label": "Bash pattern matching feature files",
            "usage": "Bash pattern matching feature files (.csv)",
            "type": "string",
            "render": "file",
            "default_value": "path/to/*.ordered.csv",
            "group": "input"
        },
 
       {
            "name": "features_file",
            "usage": "File containing one path per line to a feature file (.csv)",
            "type": "string",
            "render": "file",
            "default_value": "",
            "group": "input"
        },



       {
            "name": "existing_feature_matrix",
            "usage": "Feature matrix (first column ID) (.csv)",
            "type": "string",
            "render": "file",
            "default_value": "",
            "group": "input"
        },

       {
            "name": "existing_feature_matrix_labele",
            "usage": "Feature matrix already labeled with gold standard training interactions and optionally complex membership groups (.csv)",
            "type": "string",
            "render": "file",
            "default_value": "",
            "group": "input"
        },

 
      {
            "name": "scored_interactions",
            "usage": "File containing scored interactions",
            "type": "string",
            "render": "file",
            "default_value": "",
            "group": "input"
        },


      {
            "name": "postrain",
            "usage": "Positive training interactions",
            "type": "string",
            "render": "file",
            "default_value": "",
            "group": "input_goldstandard"
        },

      {
            "name": "postest",
            "usage": "Positive withheld test interactions",
            "type": "string",
            "render": "file",
            "default_value": "",
            "group": "input_goldstandard"
        },

      {
            "name": "negtrain",
            "usage": "Negative training interactions",
            "type": "string",
            "render": "file",
            "default_value": "",
            "group": "input_goldstandard"
        },

      {
            "name": "negtest",
            "usage": "Negative withheld test interactions",
            "type": "string",
            "render": "file",
            "default_value": "",
            "group": "input_goldstandard"
        },

      {
            "name": "groups",
            "usage": "Mapping between training interactions and complex number, if present crossvalidation will not split interactions from the same complex into different folds",
            "type": "string",
            "render": "file",
            "default_value": "",
            "group": "input_goldstandard"
        },



        {
            "name": "tpot_dir",
            "usage": "Path to marcottelab/run_TPOT directory",
            "type": "string",
            "render": "file",
            "default_value": "",
            "group": "repositories"
        },

        {
            "name": "add_poisson_noise",
            "usage": "Flag true if input elution is count data",
            "type": "boolean",
            "render": "check-box",
            "default_value": false,
            "group": "settings_features"
        },

        {
            "name": "poisson_reps",
            "usage": "Number of poisson reps for count data",
            "type": "integer",
            "render": "textfield",
            "default_value": 5,
            "group": "settings_features"
        },


        {
            "name": "generate_labels",
            "usage": "Set as false to use existing gold standard labels, --help --generate_labels false to see relevant parameters",
            "type": "boolean",
            "render": "check-box",
            "default_value": false,
            "group": "input_goldstandard"
        },


        {
            "name": "merge_threshold",
            "usage": "Merge threshold for input goldstandard complexes",
            "type": "numeric",
            "render": "textfield",
            "default_value": 0.6,
            "group": "input_goldstandard"
        },

        {
            "name": "complex_size_threshold",
            "usage": "Maximum goldstandard complex size",
            "type": "integer",
            "render": "textfield",
            "default_value": 30,
            "group": "input_goldstandard"
        },

        {
            "name": "negatives_from_observed",
            "usage": "When true, generates negatives from observed interactions. When false, generates negatives between different gold standard complexes ",
            "type": "boolean",
            "render": "check-box",
            "default_value": true,
            "group": "input_goldstandard"
        },


        {
            "name": "negative_limit",
            "usage": "Maximum number of negative interactions per negative set",
            "type": "integer",
            "render": "textfield",
            "default_value": 20000,
            "group": "input_goldstandard"
        },



        {
            "name": "classifiers_to_scan",
            "usage": "The set of sklearn classifiers to scan",
            "type": "string",
            "render": "file",
            "default_value": "",
            "group": "settings_training"
        },

        {
            "name": "generations",
            "usage": "TPOT generations",
            "type": "integer",
            "render": "textfield",
            "default_value": 10,
            "group": "settings_training"
        },

        {
            "name": "population",
            "usage": "TPOT population",
            "type": "integer",
            "render": "textfield",
            "default_value": 20,
            "group": "settings_training"
        },

        {
            "name": "n_jobs",
            "usage": "TPOT n_jobs",
            "type": "integer",
            "render": "textfield",
            "default_value": 20,
            "group": "settings_training"
        },

        {
            "name": "annotation_file",
            "usage": "An annotation file with ID column matching identifiers (.csv)",
            "type": "string",
            "render": "file",
            "default_value": "",
            "group": "settings_clustering"
        },

        {
            "name": "elution_file",
            "usage": "A matrix containing elution profiles (.csv)",
            "type": "string",
            "render": "file",
            "default_value": "",
            "group": "settings_clustering"
        },

        {
            "name": "walktrap_steps",
            "usage": "Number of walksteps for walktrap clustering",
            "type": "integer",
            "render": "textfield",
            "default_value": 3,
            "group": "settings_clustering"
        },

        {
            "name": "fdr_cutoff",
            "usage": "Only include interactions in clustering below this false discovery rate",
            "type": "numeric",
            "render": "textfield",
            "default_value": 0.1,
            "group": "settings_clustering"
        },


        {
            "name": "protein_complex_maps_dir",
            "usage": "Path to marcottelab/protein_complex_maps directory",
            "type": "string",
            "render": "file",
            "default_value": "",
            "group": "repositories"
        },

        {
            "name": "goldstandard_complexes",
            "usage": "Path to gold standard complexes, one per line, with space separated members",
            "type": "string",
            "render": "file",
            "default_value": "",
            "group": "input_goldstandard"
        },



        {
            "name": "singleEnd",
            "label": "Sequencing strategy",
            "usage": "Flag if input data is of type singleEnd.",
            "type": "boolean",
            "render": "check-box",
            "default_value": false,
            "group": "input"
        },
        {
            "name": "seqtype",
            "label": "Sequence type",
            "usage": "Tells hlatyping if input is of type DNA or RNA.",
            "type": "string",
            "render": "radio-button",
            "choices": ["dna", "rna"],
            "default_value": "dna",
            "group": "input"
        },
        {
            "name": "solver",
            "label": "IP solver alghorithm",
            "usage": "Selects an IP solver alghorithm for hlatyping.",
            "type": "string",
            "render": "radio-button",
            "choices": ["glpk", "cbc"],
            "default_value": "glpk",
            "group": "prediction"
        },
        {
            "name": "enumerations",
            "label": "Number of OptiType enumerations",
            "usage": "Shows additional n-1 suboptimal solutions from OptiType.",
            "type": "integer",
            "render": "range",
            "choices": [1,150],
            "default_value": 1,
            "group": "prediction"
        },
        {
            "name": "beta",
            "label": "Weight for homozygosity accounting",
            "usage": "Shows additional n-1 suboptimal solutions from OptiType-",
            "type": "decimal",
            "render": "range",
            "choices": [0.0, 0.1],
            "default_value": 0.009,
            "group": "prediction"
        },
        {
            "name": "prefix",
            "label": "Output file prefix.",
            "usage": "Adds a string prefix to the output files.",
            "type": "string",
            "render": "textfield",
            "default_value": "hla_run",
            "pattern": ".*",
            "group": "prediction"
        },
        {
            "name": "reads",
            "label": "Mapped or unmapped reads",
            "usage": "HLA typing workflow input data.",
            "type": "string",
            "render": "file",
            "default_value": "path/to/reads.fastq.gz",
            "pattern": ".*(\\.fastq$|\\.fastq\\.gz$|\\.bam$)",
            "group": "input"
        },
        {
            "name": "index",
            "label": "Reference index URI",
            "usage": "Yara HLA dna reference index location.",
            "type": "string",
            "render": "file",
            "default_value": "$baseDir/data/indices/yara/hla_reference_dna",
            "pattern": ".*",
            "group": "input"
        }
        
    ]
}
